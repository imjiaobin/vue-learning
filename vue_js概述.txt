###vue.js概述

  -建構資料驅動的web介面函式庫
  -目標是透過盡可能簡單的API實作回應的資料綁定和組合的視圖元件
  -不是一個全能的框架,只聚焦在視圖層,所以容易學習也容易和其他函式庫以及現在專案整合
  -相關的工具和支援的函式庫一起使用時,vue.js可以完美的驅動複雜的單頁應用

###HTTP
 -HTTP:
   -HTTP是一種簡單的請求/回應協定,通常作用於TCP上
   -HTTP指定了用戶端可能發送給伺服器甚麼樣的訊息,以及得到甚麼樣回應
   -請求和回應的訊息標頭採用ASCII碼的形式,訊息的內容則以MIME的格式
    (ASCII:美國標準信息交換碼,用7位2進制數表示128個字符,包括字母,數字標點符號,和其他各種符號,以達到網路訊息傳輸中的可靠性和兼容性)
    (MIME:Multipurpose Internet Mail Extension,一種多用途互聯網郵件擴展標準,在HTTP中被廣泛使用,每個MIME類型都由一個唯一的字符串表示,告訴瀏覽器如何正確處理接收到的數據)

-TCP:
    -用戶端在網路應用層(HTTP)發起某個web頁面的HTTP請求,那麼傳輸層(TCP)會把從應用層收到的資料,(HTTP請求包)進行分割,並在每個封包上標記序號以及通訊埠編號,形成網路傳輸層的HTTP封包,在增加通訊目的地的MAC位置後做為鏈路層讀資料封包,這樣發網服務端的網路通訊請求就準備完成,接收端的伺服器在鏈路層接收到封包後,按層拆封再按照順序往上層發送,一直到應用層,才算是正式接收到HTTP請求,之後再傳送確認訊息,給用戶端說伺服器端收到了,可以開始傳輸了嗎?再由用戶端傳達可以開始接收了,這樣一來一回的過程,叫做三向握手方法

-URI:
    -在HTTP互動的過程中,用戶端透過URI(Uniform Resource Identifier統一資源識別向)查詢並定位網路資源,
通常包含了資源的名稱,資源命名的方式,以及存放資源的主機名稱
    -URI會包含協定名稱,登入驗證資訊,伺服器地址,伺服器通訊埠號,含層次的檔案路徑,查詢符號串列,片段標示符號,例如http://pass@www.example.com:80/home/index.html?=age=11#mask
         -協定:http(https,ftp)
         -登入資訊(驗證):pass(使用者,伺服器獲得資源時所需要的登入資訊)
         -伺服器地址:www.example.com
         -通訊埠號:80
         -檔案路徑:/Home/index.html
         -查詢字串:age=11
         -片段識別符號:mask
    -HTTP請求的每一個封包,都有一來一回的request和response
         -request封包包含了"請求行","請求標頭","通用標頭","實體標頭"
         -response封包包含了"狀態行","回應標頭","通用標頭","實體標投"
         -狀態行:
                 -1XX(表示已經接收到請求的初始部分,可以繼續發送)
                 -2XX(表示請求成功,並返回請求內容)
                 -3XX(資源位置已變更,重新導向)
                 -4XX(客戶端請求失敗,問題發生在客戶端)
                 -5XX(伺服器端回應失敗,問題發生在伺服器端)

###Node.js:
    -不是一個新的語言,函式庫或框架,他是供開發人員在瀏覽器以外的地方,更方便開發web程式的一個JS語言執行環境,使js可以和其他後端語言平起平坐
    -Node.js引進Google的瀏覽器的V8引擎(此引擎使JS可以在瀏覽器運作),Node.js就是讓JS可以在電腦上執行!
    -Node.js為JS提供了伺服器的基本操作,如檔案讀寫,網路服務的建構,網路通訊或HTTP伺服器處理...等等的功能
    -優勢:
        -完全使用JS語法整合web前端後端的程式設計環境,大大降低了開發成本
         (因為傳統的後端程式語言,JAVA,PHP,.NET會為每一個client端建立一個執行續,而Node.js只用一個執行續,就可以執行上萬的client端需求,使用者一連接,就會觸發一個內部程序,透過非阻塞I/O,和事件驅動機制,Node.js在宏觀的角度來看,和其他後端語言是平行的)
        -提供一個簡單,建立高性能伺服器,並在其中執行各種應用程式的開發環境
        -使用了V8指令碼(由C++寫成的V引擎,Node.js),簡而言之就是將V8引擎的語言轉用在了伺服器中,使建置不同服務功能或API時能夠更高效
        -JS本身對二進位置的指令碼不夠多,Node.js強化了這一方面
        -使用全新的編譯技術,讓JS更貼近C++

###TypeScript
    -TypeScript是JS的超集合,擴充了JS的語法,所以JS和TypeScrip是可以共用的,也是Vue.js的語言基礎
    -TypeScript(Type JavaScript at Any Scale),提供了類型系統和支援JavaScript
    -TypeScript是靜態又弱型別的語言,是微軟開發的,可以編譯為JavaScript
    -
